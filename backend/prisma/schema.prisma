// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

generator pothos {
  provider     = "prisma-pothos-types"
  clientOutput = "@prisma/client"
  output       = "../src/generated/pothos-types.ts"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  USER
  ADMIN
}

model User {
  id                  String              @id @default(uuid())
  createdAt           DateTime            @default(now())
  updatedAt           DateTime            @updatedAt
  email               String?             @unique
  isOnboarded         Boolean             @default(false)
  firstName           String?
  lastName            String?
  address1            String?
  address2            String?
  city                String?
  state               String?
  password            String?
  provider            String?
  businessName        String?
  businessDescription String?
  yearOfFounding      Int?
  website             String?
  tier                String?
  dailySearchesUsed   Int?
  role                UserRole            @default(USER)
  Conversations       AgentConversation[]
}

model OneTimePassword {
  id        String   @id @default(uuid())
  email     String
  code      String
  expiresAt DateTime
  used      Boolean  @default(false)
  createdAt DateTime @default(now())
}

// AgentConversation is a recorded conversation with agent AI and the user
// associated with it
model AgentConversation {
  id     String @id @default(uuid())
  userId String

  title String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  metaData Json @default("{}")

  user                     User                       @relation(fields: [userId], references: [id])
  AgentConversationMessage AgentConversationMessage[]
}

enum MessageRole {
  // messages created internally by the system, should be hidden from the user
  SYSTEM
  // messages sent by the user
  USER
  // messages received from the agent
  AGENT
}

model AgentConversationMessage {
  // use UUID 7 to support chronological sorting 
  // uuid 7 support info - https://github.com/prisma/prisma/issues/24079
  id             String      @id @default(uuid(7))
  conversationId String
  role           MessageRole

  content     String
  contentJson Json

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  metaData Json

  conversation AgentConversation @relation(fields: [conversationId], references: [id])

  @@index([conversationId, id(sort: Desc)])
}
